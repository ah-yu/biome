---
source: crates/biome_css_parser/tests/spec_test.rs
expression: snapshot
---
## Input

```css
.foo {
    color: $color
}

.bar {
    color: red;
    $bar;
}
```


## AST

```
CssRoot {
    bom_token: missing (optional),
    rules: CssRuleList [
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@0..1 "." [] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@1..5 "foo" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@5..6 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssGenericProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@6..16 "color" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@16..18 ":" [] [Whitespace(" ")],
                                value: CssGenericComponentValueList [
                                    CssGritMetavariable {
                                        dollar_token: DOLLAR@18..19 "$" [] [],
                                        id_token: IDENT@19..24 "color" [] [],
                                    },
                                ],
                            },
                            important: missing (optional),
                        },
                        semicolon_token: missing (optional),
                    },
                ],
                r_curly_token: R_CURLY@24..26 "}" [Newline("\n")] [],
            },
        },
        CssQualifiedRule {
            prelude: CssSelectorList [
                CssCompoundSelector {
                    nesting_selector_token: missing (optional),
                    simple_selector: missing (optional),
                    sub_selectors: CssSubSelectorList [
                        CssClassSelector {
                            dot_token: DOT@26..29 "." [Newline("\n"), Newline("\n")] [],
                            name: CssCustomIdentifier {
                                value_token: IDENT@29..33 "bar" [] [Whitespace(" ")],
                            },
                        },
                    ],
                },
            ],
            block: CssDeclarationOrRuleBlock {
                l_curly_token: L_CURLY@33..34 "{" [] [],
                items: CssDeclarationOrRuleList [
                    CssDeclarationWithSemicolon {
                        declaration: CssDeclaration {
                            property: CssGenericProperty {
                                name: CssIdentifier {
                                    value_token: IDENT@34..44 "color" [Newline("\n"), Whitespace("    ")] [],
                                },
                                colon_token: COLON@44..46 ":" [] [Whitespace(" ")],
                                value: CssGenericComponentValueList [
                                    CssIdentifier {
                                        value_token: IDENT@46..49 "red" [] [],
                                    },
                                ],
                            },
                            important: missing (optional),
                        },
                        semicolon_token: SEMICOLON@49..50 ";" [] [],
                    },
                    CssGritMetavariableWithSemicolon {
                        variable: CssGritMetavariable {
                            dollar_token: DOLLAR@50..56 "$" [Newline("\n"), Whitespace("    ")] [],
                            id_token: IDENT@56..59 "bar" [] [],
                        },
                        semicolon_token: SEMICOLON@59..60 ";" [] [],
                    },
                ],
                r_curly_token: R_CURLY@60..62 "}" [Newline("\n")] [],
            },
        },
    ],
    eof_token: EOF@62..62 "" [] [],
}
```

## CST

```
0: CSS_ROOT@0..62
  0: (empty)
  1: CSS_RULE_LIST@0..62
    0: CSS_QUALIFIED_RULE@0..26
      0: CSS_SELECTOR_LIST@0..5
        0: CSS_COMPOUND_SELECTOR@0..5
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@0..5
            0: CSS_CLASS_SELECTOR@0..5
              0: DOT@0..1 "." [] []
              1: CSS_CUSTOM_IDENTIFIER@1..5
                0: IDENT@1..5 "foo" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@5..26
        0: L_CURLY@5..6 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@6..24
          0: CSS_DECLARATION_WITH_SEMICOLON@6..24
            0: CSS_DECLARATION@6..24
              0: CSS_GENERIC_PROPERTY@6..24
                0: CSS_IDENTIFIER@6..16
                  0: IDENT@6..16 "color" [Newline("\n"), Whitespace("    ")] []
                1: COLON@16..18 ":" [] [Whitespace(" ")]
                2: CSS_GENERIC_COMPONENT_VALUE_LIST@18..24
                  0: CSS_GRIT_METAVARIABLE@18..24
                    0: DOLLAR@18..19 "$" [] []
                    1: IDENT@19..24 "color" [] []
              1: (empty)
            1: (empty)
        2: R_CURLY@24..26 "}" [Newline("\n")] []
    1: CSS_QUALIFIED_RULE@26..62
      0: CSS_SELECTOR_LIST@26..33
        0: CSS_COMPOUND_SELECTOR@26..33
          0: (empty)
          1: (empty)
          2: CSS_SUB_SELECTOR_LIST@26..33
            0: CSS_CLASS_SELECTOR@26..33
              0: DOT@26..29 "." [Newline("\n"), Newline("\n")] []
              1: CSS_CUSTOM_IDENTIFIER@29..33
                0: IDENT@29..33 "bar" [] [Whitespace(" ")]
      1: CSS_DECLARATION_OR_RULE_BLOCK@33..62
        0: L_CURLY@33..34 "{" [] []
        1: CSS_DECLARATION_OR_RULE_LIST@34..60
          0: CSS_DECLARATION_WITH_SEMICOLON@34..50
            0: CSS_DECLARATION@34..49
              0: CSS_GENERIC_PROPERTY@34..49
                0: CSS_IDENTIFIER@34..44
                  0: IDENT@34..44 "color" [Newline("\n"), Whitespace("    ")] []
                1: COLON@44..46 ":" [] [Whitespace(" ")]
                2: CSS_GENERIC_COMPONENT_VALUE_LIST@46..49
                  0: CSS_IDENTIFIER@46..49
                    0: IDENT@46..49 "red" [] []
              1: (empty)
            1: SEMICOLON@49..50 ";" [] []
          1: CSS_GRIT_METAVARIABLE_WITH_SEMICOLON@50..60
            0: CSS_GRIT_METAVARIABLE@50..59
              0: DOLLAR@50..56 "$" [Newline("\n"), Whitespace("    ")] []
              1: IDENT@56..59 "bar" [] []
            1: SEMICOLON@59..60 ";" [] []
        2: R_CURLY@60..62 "}" [Newline("\n")] []
  2: EOF@62..62 "" [] []

```
